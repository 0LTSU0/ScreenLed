#ifndef SCREENLEDGUI_H
#define SCREENLEDGUI_H

#include <QMainWindow>
#include <QThread>
#include <QTimer>

#include "consts.h"
#if defined(WIN32)
#include "ScreenCapWindows.h"
#else
#include "ScreenCapLinux.h"
#endif

QT_BEGIN_NAMESPACE
namespace Ui {
class ScreenLedGUI;
}
QT_END_NAMESPACE

class ScreenLedGUI : public QMainWindow
{
    Q_OBJECT

public:
    ScreenLedGUI(QWidget *parent = nullptr);
    ~ScreenLedGUI();

private slots:
    void on_startButton_clicked();

    void on_saveConfig_clicked();

private:
    //functions
    int fillConfigForm();
    void saveConfigForm();
    void updateStatusLabel();

    //class variables
    QThread* m_screenLibTh = new QThread;
    std::string m_gConfPath = "screenLedConfig.json"; //using runtimefolder should be fine for now since if this file does not exist, it gets generated by screenCaptureWorker during its initialization
#if defined(WIN32)
    screenCaptureWorkerWindows* m_screenCapWorker = new screenCaptureWorkerWindows(m_gConfPath);
#else
    screenCaptureWorkerLinux* m_screenCapWorker = new screenCaptureWorkerLinux(m_gConfPath);
#endif

    bool m_libScreenledThreadIsRunning = false;
    runStatus currentRunStatus = runStatus::IDLE;

    QTimer *statusUpdatetimer;  // Timer to schedule status label updates
    Ui::ScreenLedGUI *ui;

};
#endif // SCREENLEDGUI_H
